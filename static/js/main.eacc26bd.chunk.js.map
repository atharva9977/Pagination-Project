{"version":3,"sources":["PaginateProject.js","reportWebVitals.js","index.js"],"names":["ContentComponent","content","processing","map","style","padding","border","listStyleType","title","body","id","PaginationComponent","i","contentPerPage","totalContent","paginate","pageNumbers","Math","ceil","push","display","alignItems","justifyContent","listStyle","number","width","backgroundColor","color","marginLeft","marginRight","onClick","href","PaginateProject","React","useState","setContent","setProcessing","currentContent","setCurrentContent","useEffect","a","axios","get","resultSet","data","fetchContent","console","log","indexOfLastContent","indexOfFirstContent","currentContents","slice","textAlign","length","pageNumber","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAsCMA,EAAiB,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,QACzB,OAD+C,EAAdC,WAIjC,yDAIA,8BACA,6BAEAD,EAAQE,KAAI,SAACF,GACb,OACA,qBAAKG,MAAO,CAACC,QAAQ,OAAOC,OAAO,kBAAkBC,cAAc,QAAnE,SACA,+BAAsB,sCAAY,uBAAMN,EAAQO,MAAM,uBAAK,uBAAK,qCAAW,uBAAMP,EAAQQ,KAAK,uBAAK,yBAA1FR,EAAQS,cAYXC,EAAoB,SAAC,GAA0C,IAEjEC,EAFwBC,EAAwC,EAAxCA,eAAeC,EAAyB,EAAzBA,aAAaC,EAAY,EAAZA,SAClDC,EAAY,GAElB,IAAIJ,EAAE,EAAEA,GAAGK,KAAKC,KAAKJ,EAAaD,GAAiBD,IAEnDI,EAAYG,KAAKP,GAEjB,OACA,8BACA,6BACA,qBAAKR,MAAO,CAACgB,QAAQ,OAAOC,WAAW,SAASC,eAAe,SAASC,UAAU,QAAlF,SAEAP,EAAYb,KAAI,SAACqB,GACjB,OACA,oBAAKpB,MAAO,CAACE,OAAO,mBAAmBD,QAAQ,MAAMoB,MAAM,QAAQC,gBAAgB,SAAnF,SACA,oBAAItB,MAAO,CAACuB,MAAM,QAAQC,WAAW,OAAOC,YAAY,QAASC,QAAS,kBAAIf,EAASS,IAASO,KAAK,KAArG,UAA2G,8BAAIP,EAAJ,OAA3G,QADkGA,aAgBnFQ,EA3FO,WAEtB,MAA0BC,IAAMC,SAAS,IAAzC,mBAAMjC,EAAN,KAAckC,EAAd,KACA,EAAgCF,IAAMC,UAAS,GAA/C,mBAAMhC,EAAN,KAAiBkC,EAAjB,KACA,EAAwCH,IAAMC,SAAS,GAAvD,mBAAMG,EAAN,KAAqBC,EAArB,KACA,EAAsBL,IAAMC,SAAS,IAA/BrB,EAAN,oBAGAoB,IAAMM,WAAU,YACE,uCAAC,4BAAAC,EAAA,6DACnBJ,GAAc,GADK,SAEGK,IAAMC,IAAI,8CAFb,OAEbC,EAFa,OAGnBR,EAAWQ,EAAUC,MACrBR,GAAc,GAJK,2CAAD,qDAMlBS,KACE,IACFC,QAAQC,IAAI9C,GAEZ,IAAM+C,EAAmBX,EAAexB,EAClCoC,EAAoBD,EAAmBnC,EACvCqC,EAAgBjD,EAAQkD,MAAMF,EAAoBD,GAKxD,OACA,gCACA,oBAAI5C,MAAO,CAACgD,UAAU,SAAS1B,gBAAgB,UAAUpB,OAAO,mBAAmBqB,MAAM,SAAzF,SAAmG,oFACnG,cAAC,EAAD,CAAkB1B,QAASiD,EAAiBhD,WAAYA,IACxD,cAAC,EAAD,CAAqBW,eAAgBA,EAAgBC,aAAcb,EAAQoD,OAAQtC,SAPpE,SAACuC,GAChBhB,EAAkBgB,UCfHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eacc26bd.chunk.js","sourcesContent":["import React from 'react'\r\nimport axios from 'axios'\r\n\r\nconst PaginateProject=()=>{\r\n\r\nconst[content,setContent]=React.useState([]);\r\nconst[processing,setProcessing]=React.useState(false);\r\nconst[currentContent,setCurrentContent]=React.useState(1);\r\nconst[contentPerPage]=React.useState(10);\r\n\r\n\r\nReact.useEffect(()=>{\r\nconst fetchContent=async()=>{\r\nsetProcessing(true);\r\nconst resultSet=await axios.get('https://jsonplaceholder.typicode.com/posts');\r\nsetContent(resultSet.data);\r\nsetProcessing(false);\r\n}\r\nfetchContent();\r\n},[]);\r\nconsole.log(content);\r\n\r\nconst indexOfLastContent=currentContent*contentPerPage;\r\nconst indexOfFirstContent=indexOfLastContent-contentPerPage;\r\nconst currentContents=content.slice(indexOfFirstContent,indexOfLastContent);\r\n\r\nconst paginate=(pageNumber)=>{\r\nsetCurrentContent(pageNumber);\r\n}\r\nreturn(\r\n<div >\r\n<h1 style={{textAlign:\"center\",backgroundColor:\"#171717\",border:\"5px solid yellow\",color:\"white\"}}><b>P A G I N A T I O N &nbsp;&nbsp;&nbsp;&nbsp;P R O J E C T</b></h1>\r\n<ContentComponent content={currentContents} processing={processing} />\r\n<PaginationComponent contentPerPage={contentPerPage} totalContent={content.length} paginate={paginate} />\r\n</div>\r\n)\r\n}\r\n\r\nconst ContentComponent=({content,processing})=>{\r\nif(processing){\r\nreturn(\r\n\r\n<h3>P R O C E S S I N G....</h3>\r\n)\r\n}\r\nreturn(\r\n<div >\r\n<ul>\r\n{\r\ncontent.map((content)=>{\r\nreturn(\r\n<div style={{padding:\"10px\",border:\"3px solid black\",listStyleType:\"none\"}}>\r\n<li key={content.id} ><b>TITLE</b><br/>{content.title}<br/><br/><b>BODY</b><br/>{content.body}<br/><br/></li>\r\n</div>\r\n)\r\n})\r\n\r\n}\r\n</ul>\r\n</div>\r\n\r\n)\r\n}\r\n\r\nconst PaginationComponent=({contentPerPage,totalContent,paginate})=>{\r\nconst pageNumbers=[];\r\nvar i;\r\nfor(i=1;i<=Math.ceil(totalContent/contentPerPage); i++)\r\n{\r\npageNumbers.push(i);\r\n}\r\nreturn(\r\n<div>\r\n<ul >\r\n<div style={{display:\"flex\",alignItems:\"center\",justifyContent:\"center\",listStyle:\"none\"}}>\r\n{\r\npageNumbers.map((number)=>{\r\nreturn(\r\n<li  style={{border:\"3px solid yellow\",padding:\"3px\",width:\"100px\",backgroundColor:\"black\"}} key={number}>\r\n<a  style={{color:\"white\",marginLeft:\"45px\",marginRight:\"45px\"}} onClick={()=>paginate(number)} href='!#' ><b>{number} </b> </a>\r\n\r\n</li>\r\n\r\n)\r\n})\r\n\r\n}\r\n</div>\r\n</ul>\r\n</div>\r\n)\r\n}\r\n\r\n\r\nexport default PaginateProject;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport PaginateProject from './PaginateProject';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PaginateProject />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}